class Solution {
    void mergesort(int nums[],int s,int m,int e)
    {
        int size1=m-s+1;
        int size2=e-m;
        int l[]=new int[size1];
        int r[]=new int[size2];
        for(int i=0;i<size1;i++)
            l[i]=nums[s+i];
     
        for(int i=0;i<size2;i++)
           r[i]=nums[m+1+i];
        int i=0,j=0,k=s;
        while(i<size1 && j<size2)
        {
            if(l[i]<=r[j])
              nums[k++]=l[i++];
           else
             nums[k++]=r[j++];
             //k++;
        }
        while(i<size1)
            nums[k++]=l[i++];
        while(j<size2)
            nums[k++]=r[j++];
    }
    void merge(int nums[],int s,int e)
    {
        if(s<e)
        {
            int mid =s+(e-s)/2;
            merge(nums,s,mid);
            merge(nums,mid+1,e);
            mergesort(nums,s,mid,e);
        }
    }
    public void sortColors(int[] nums) {
        merge(nums,0,nums.length-1);
        return ;
    }
}
