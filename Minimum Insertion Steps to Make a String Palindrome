class Solution {
    public int minInsertions(String s) {
        String s1="";
        int n=s.length();
        for(int i=s.length()-1;i>=0;i--)
        {
            s1+=s.charAt(i);
        }
        int dp[][]=new int[s.length()+1][s1.length()+1];
        for(int i=0;i<=s.length();i++)
        {
            for(int j=0;j<=s1.length();j++)
            {
                dp[i][j]=-1;
            }
        }
        int ans =lcs(s,s1,s.length(),s1.length(),dp);
        return n-ans;
    }
    int lcs(String c1,String c2,int m,int n,int dp[][])
    {
        if(m==0 || n==0)
          return 0;
        if(dp[m][n]!=-1)
            return dp[m][n];
        if(c1.charAt(m-1)==c2.charAt(n-1))
        {
             dp[m][n]=1+lcs(c1,c2,m-1,n-1,dp);

            return dp[m][n];
        }
        else{
            int ans1=lcs(c1,c2,m-1,n,dp);
            int ans2=lcs(c1,c2,m,n-1,dp);
            dp[m][n]= Math.max(ans1 ,ans2);
            return dp[m][n];
        }
    }
}  
    
