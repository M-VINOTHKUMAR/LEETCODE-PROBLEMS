/*
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode temp1=head;
        ListNode temp2=head;
        
        int l=0;
        while(temp1!=null){
            l++;
            temp1=temp1.next;
        }
        if(l==n) return head.next;
        int i=1;
       // if n>=l:

        while (i<l-n)
        {
            temp2=temp2.next;
            i++;
        }
        // if len==n{
        //     head=head.next
        // }

        if (temp2.next==null){
            return null;
        }
        else{
            temp2.next=temp2.next.next;
        }
        return head;

        
    }
}
